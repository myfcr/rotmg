class
 refid "_-0IV:_-05z"
 instance QName(PackageNamespace("_-0IV"), "_-05z")
  extends QName(PackageNamespace("", "#0"), "Object")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("_-zf")
  iinit
   refid "_-0IV:_-05z/instance/init"
   body
    maxstack 3
    localcount 3
    initscopedepth 4
    maxscopedepth 5
    code
     pushfalse
     pushtrue
     setlocal1

     jump                L10

     equals
     checkfilter
     nextname
     subtract
     bitnot
     popscope
L10:
     setlocal2

     getlocal0
     pushscope

     getlocal1
     iffalse             L17

     getlocal0
     constructsuper      0

L17:
     returnvoid
    end ; code
   end ; body
  end ; method
 end ; instance
 cinit
  refid "_-0IV:_-05z/class/init"
  body
   maxstack 3
   localcount 1
   initscopedepth 3
   maxscopedepth 4
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
 trait method QName(PackageNamespace("", "#0"), "_-0HV") flag FINAL dispid 3
  method
   refid "_-0IV:_-05z/class/_-0HV"
   param QName(PackageNamespace("", "#0"), "Number")
   param QName(PackageNamespace("", "#0"), "Number")
   param QName(PackageNamespace("", "#0"), "Number")
   param QName(PackageNamespace("", "#0"), "Number")
   returns QName(PackageNamespace("", "#0"), "Number")
   body
    maxstack 7
    localcount 5
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     pushbyte            1
     jump                L10

     getlocal3
     getlocal2
     declocal            3
     convert_b
     convert_u
     inclocal_i          3
L10:
     getlex              QName(PackageNamespace("", "#0"), "Math")
     getlocal1
     getlex              QName(PackageNamespace("", "#0"), "Math")
     getproperty         QName(PackageNamespace("", "#0"), "PI")
     pushbyte            2
     divide
     multiply
     callproperty        QName(PackageNamespace("", "#0"), "cos"), 1
     subtract
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace("", "#0"), "_-tA") flag FINAL dispid 4
  method
   refid "_-0IV:_-05z/class/_-tA"
   param QName(PackageNamespace("", "#0"), "Number")
   param QName(PackageNamespace("", "#0"), "Number")
   param QName(PackageNamespace("", "#0"), "Number")
   param QName(PackageNamespace("", "#0"), "Number")
   returns QName(PackageNamespace("", "#0"), "Number")
   body
    maxstack 6
    localcount 5
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("", "#0"), "Math")
     jump                L10

     increment_i
     not
     pushnull
     inclocal            3
     bitor
     urshift
L10:
     getlocal1
     getlex              QName(PackageNamespace("", "#0"), "Math")
     getproperty         QName(PackageNamespace("", "#0"), "PI")
     pushbyte            2
     divide
     multiply
     callproperty        QName(PackageNamespace("", "#0"), "sin"), 1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace("", "#0"), "_-Ts") flag FINAL dispid 5
  method
   refid "_-0IV:_-05z/class/_-Ts"
   param QName(PackageNamespace("", "#0"), "Number")
   param QName(PackageNamespace("", "#0"), "Number")
   param QName(PackageNamespace("", "#0"), "Number")
   param QName(PackageNamespace("", "#0"), "Number")
   returns QName(PackageNamespace("", "#0"), "Number")
   body
    maxstack 6
    localcount 7
    initscopedepth 3
    maxscopedepth 4
    code
     pushfalse
     pushtrue
     swap
     jump                L10

     dxnslate
     setlocal            4

     bitxor
     increment_i
     getlocal0
     dxnslate
L10:
     setlocal            5

     setlocal            6

     getlocal0
     pushscope

     pushdouble          -0.5
     getlocal            6
     dup
     iftrue              L21

     pop
     getlocal2
     convert_b
L21:
     iffalse             L30

     getlex              QName(PackageNamespace("", "#0"), "Math")
     getlocal1
     getlex              QName(PackageNamespace("", "#0"), "Math")
     getproperty         QName(PackageNamespace("", "#0"), "PI")
     multiply
     callproperty        QName(PackageNamespace("", "#0"), "cos"), 1
     decrement
     multiply
L30:
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
end ; class
