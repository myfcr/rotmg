class
 refid "_-1Kt:_-Ru"
 instance QName(PackageNamespace("_-1Kt"), "_-Ru")
  extends QName(PackageNamespace("_-1Kt"), "_-1Rc")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("_-Oz")
  iinit
   refid "_-1Kt:_-Ru/instance/init"
   param QName(PackageNamespace("_-a"), "_-uD")
   flag NEED_REST
   body
    maxstack 4
    localcount 5
    initscopedepth 5
    maxscopedepth 6
    code
     pushfalse
     pushtrue
     swap
     jump                L10

     negate
     bitxor
     lessthan
     subtract_i
     not
     declocal            3
L10:
     setlocal3

     setlocal            4

     getlocal0
     pushscope

     getlocal            4
     dup
     iftrue              L20

     pop
     getlocal2
     convert_b
L20:
     iffalse             L28

     getlocal0
     constructsuper      0

     getlocal3
     iftrue              L28

     getlocal0
     getlocal1
     initproperty        QName(PrivateNamespace("*", "_-1Kt:_-Ru/instance"), "_-RI")

L28:
     getlocal0
     getlocal2
     initproperty        QName(PrivateNamespace("*", "_-1Kt:_-Ru/instance"), "params")

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PrivateNamespace("*", "_-1Kt:_-Ru/instance"), "_-RI") type QName(PackageNamespace("_-a"), "_-uD") end
  trait slot QName(PrivateNamespace("*", "_-1Kt:_-Ru/instance"), "params") type QName(PackageNamespace("", "#0"), "Array") end
  trait method QName(ProtectedNamespace("_-Oz"), "startTask") flag OVERRIDE
   method
    refid "_-1Kt:_-Ru/instance/_-Oz:startTask"
    returns QName(PackageNamespace("", "#0"), "void")
    body
     maxstack 5
     localcount 3
     initscopedepth 5
     maxscopedepth 6
     code
      pushfalse
      pushtrue
      swap
      jump                L10

      pushwith
      astypelate
      dup
      astypelate
      convert_u
      strictequals
L10:
      setlocal1

      setlocal2

      getlocal0
      pushscope

      getlocal1
      dup
      jump                L23

      negate
      coerce_s
      newactivation
      urshift
      checkfilter
      bitnot
L23:
      iffalse             L27

      pop
      getlocal0
      convert_b
L27:
      iftrue              L42

      getlocal0
      getproperty         QName(PrivateNamespace("*", "_-1Kt:_-Ru/instance"), "_-RI")
      getproperty         QName(PackageNamespace("", "#0"), "dispatch")
      pushnull
      getlocal0
      getproperty         QName(PrivateNamespace("*", "_-1Kt:_-Ru/instance"), "params")
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "apply"), 2

      getlocal1
      dup
      iffalse             L41

      pop
      getlocal1
      convert_b
L41:
      iftrue              L45

L42:
      findpropstrict      QName(ProtectedNamespace("_-07N"), "_-06X")
      pushtrue
      callpropvoid        QName(ProtectedNamespace("_-07N"), "_-06X"), 1

L45:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "_-1Kt:_-Ru/class/init"
  body
   maxstack 3
   localcount 1
   initscopedepth 4
   maxscopedepth 5
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
