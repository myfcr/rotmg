class
 refid "com.hurlant.crypto.tls:TLSError"
 instance QName(PackageNamespace("com.hurlant.crypto.tls"), "TLSError")
  extends QName(PackageNamespace(""), "Error")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("_K_J_")
  iinit
   refid "com.hurlant.crypto.tls:TLSError/instance/init"
   param QName(PackageNamespace(""), "String")
   param QName(PackageNamespace(""), "int")
   body
    maxstack 3
    localcount 3
    initscopedepth 5
    maxscopedepth 6
    code
     getlocal0
     pushscope

     getlocal0
     getlocal1
     getlocal2
     constructsuper      2

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; instance
 cinit
  refid "com.hurlant.crypto.tls:TLSError/class/init"
  body
   maxstack 2
   localcount 1
   initscopedepth 4
   maxscopedepth 5
   code
    getlocal0
    pushscope

    findproperty        QName(PackageNamespace(""), "close_notify")
    pushbyte            0
    initproperty        QName(PackageNamespace(""), "close_notify")

    findproperty        QName(PackageNamespace(""), "unexpected_message")
    pushbyte            10
    initproperty        QName(PackageNamespace(""), "unexpected_message")

    findproperty        QName(PackageNamespace(""), "bad_record_mac")
    pushbyte            20
    initproperty        QName(PackageNamespace(""), "bad_record_mac")

    findproperty        QName(PackageNamespace(""), "decryption_failed")
    pushbyte            21
    initproperty        QName(PackageNamespace(""), "decryption_failed")

    findproperty        QName(PackageNamespace(""), "record_overflow")
    pushbyte            22
    initproperty        QName(PackageNamespace(""), "record_overflow")

    findproperty        QName(PackageNamespace(""), "decompression_failure")
    pushbyte            30
    initproperty        QName(PackageNamespace(""), "decompression_failure")

    findproperty        QName(PackageNamespace(""), "handshake_failure")
    pushbyte            40
    initproperty        QName(PackageNamespace(""), "handshake_failure")

    findproperty        QName(PackageNamespace(""), "bad_certificate")
    pushbyte            42
    initproperty        QName(PackageNamespace(""), "bad_certificate")

    findproperty        QName(PackageNamespace(""), "unsupported_certificate")
    pushbyte            43
    initproperty        QName(PackageNamespace(""), "unsupported_certificate")

    findproperty        QName(PackageNamespace(""), "certificate_revoked")
    pushbyte            44
    initproperty        QName(PackageNamespace(""), "certificate_revoked")

    findproperty        QName(PackageNamespace(""), "certificate_expired")
    pushbyte            45
    initproperty        QName(PackageNamespace(""), "certificate_expired")

    findproperty        QName(PackageNamespace(""), "certificate_unknown")
    pushbyte            46
    initproperty        QName(PackageNamespace(""), "certificate_unknown")

    findproperty        QName(PackageNamespace(""), "illegal_parameter")
    pushbyte            47
    initproperty        QName(PackageNamespace(""), "illegal_parameter")

    findproperty        QName(PackageNamespace(""), "unknown_ca")
    pushbyte            48
    initproperty        QName(PackageNamespace(""), "unknown_ca")

    findproperty        QName(PackageNamespace(""), "access_denied")
    pushbyte            49
    initproperty        QName(PackageNamespace(""), "access_denied")

    findproperty        QName(PackageNamespace(""), "decode_error")
    pushbyte            50
    initproperty        QName(PackageNamespace(""), "decode_error")

    findproperty        QName(PackageNamespace(""), "decrypt_error")
    pushbyte            51
    initproperty        QName(PackageNamespace(""), "decrypt_error")

    findproperty        QName(PackageNamespace(""), "protocol_version")
    pushbyte            70
    initproperty        QName(PackageNamespace(""), "protocol_version")

    findproperty        QName(PackageNamespace(""), "insufficient_security")
    pushbyte            71
    initproperty        QName(PackageNamespace(""), "insufficient_security")

    findproperty        QName(PackageNamespace(""), "internal_error")
    pushbyte            80
    initproperty        QName(PackageNamespace(""), "internal_error")

    findproperty        QName(PackageNamespace(""), "user_canceled")
    pushbyte            90
    initproperty        QName(PackageNamespace(""), "user_canceled")

    findproperty        QName(PackageNamespace(""), "no_renegotiation")
    pushbyte            100
    initproperty        QName(PackageNamespace(""), "no_renegotiation")

    returnvoid
   end ; code
  end ; body
 end ; method
 trait const QName(PackageNamespace(""), "close_notify") slotid 1 type QName(PackageNamespace(""), "uint") value Integer(0) end
 trait const QName(PackageNamespace(""), "unexpected_message") slotid 2 type QName(PackageNamespace(""), "uint") value Integer(10) end
 trait const QName(PackageNamespace(""), "bad_record_mac") slotid 3 type QName(PackageNamespace(""), "uint") value Integer(20) end
 trait const QName(PackageNamespace(""), "decryption_failed") slotid 4 type QName(PackageNamespace(""), "uint") value Integer(21) end
 trait const QName(PackageNamespace(""), "record_overflow") slotid 5 type QName(PackageNamespace(""), "uint") value Integer(22) end
 trait const QName(PackageNamespace(""), "decompression_failure") slotid 6 type QName(PackageNamespace(""), "uint") value Integer(30) end
 trait const QName(PackageNamespace(""), "handshake_failure") slotid 7 type QName(PackageNamespace(""), "uint") value Integer(40) end
 trait const QName(PackageNamespace(""), "bad_certificate") slotid 8 type QName(PackageNamespace(""), "uint") value Integer(42) end
 trait const QName(PackageNamespace(""), "unsupported_certificate") slotid 9 type QName(PackageNamespace(""), "uint") value Integer(43) end
 trait const QName(PackageNamespace(""), "certificate_revoked") slotid 10 type QName(PackageNamespace(""), "uint") value Integer(44) end
 trait const QName(PackageNamespace(""), "certificate_expired") slotid 11 type QName(PackageNamespace(""), "uint") value Integer(45) end
 trait const QName(PackageNamespace(""), "certificate_unknown") slotid 12 type QName(PackageNamespace(""), "uint") value Integer(46) end
 trait const QName(PackageNamespace(""), "illegal_parameter") slotid 13 type QName(PackageNamespace(""), "uint") value Integer(47) end
 trait const QName(PackageNamespace(""), "unknown_ca") slotid 14 type QName(PackageNamespace(""), "uint") value Integer(48) end
 trait const QName(PackageNamespace(""), "access_denied") slotid 15 type QName(PackageNamespace(""), "uint") value Integer(49) end
 trait const QName(PackageNamespace(""), "decode_error") slotid 16 type QName(PackageNamespace(""), "uint") value Integer(50) end
 trait const QName(PackageNamespace(""), "decrypt_error") slotid 17 type QName(PackageNamespace(""), "uint") value Integer(51) end
 trait const QName(PackageNamespace(""), "protocol_version") slotid 18 type QName(PackageNamespace(""), "uint") value Integer(70) end
 trait const QName(PackageNamespace(""), "insufficient_security") slotid 19 type QName(PackageNamespace(""), "uint") value Integer(71) end
 trait const QName(PackageNamespace(""), "internal_error") slotid 20 type QName(PackageNamespace(""), "uint") value Integer(80) end
 trait const QName(PackageNamespace(""), "user_canceled") slotid 21 type QName(PackageNamespace(""), "uint") value Integer(90) end
 trait const QName(PackageNamespace(""), "no_renegotiation") slotid 22 type QName(PackageNamespace(""), "uint") value Integer(100) end
end ; class
