class
 refid "mx.core:BitmapAsset"
 instance QName(PackageNamespace("mx.core"), "BitmapAsset")
  extends QName(PackageNamespace("mx.core"), "FlexBitmap")
  implements Multiname("IFlexAsset", [PackageNamespace("mx.core")])
  implements Multiname("IFlexDisplayObject", [PackageNamespace("mx.core")])
  implements Multiname("ILayoutDirectionElement", [PackageNamespace("mx.core")])
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("mx.core:BitmapAsset")
  iinit
   refid "mx.core:BitmapAsset/instance/init"
   param QName(PackageNamespace("flash.display"), "BitmapData")
   param QName(PackageNamespace(""), "String")
   param QName(PackageNamespace(""), "Boolean")
   flag HAS_OPTIONAL
   optional Null()
   optional Utf8("auto")
   optional False()
   body
    maxstack 4
    localcount 5
    initscopedepth 8
    maxscopedepth 9
    code
     getlocal0
     pushscope

     pushnull
     coerce              QName(PackageNamespace("flash.system"), "ApplicationDomain")
     setlocal            4

     getlocal0
     getlocal1
     getlocal2
     getlocal3
     constructsuper      3

     getlex              QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "FlexVersionClass")
     pushnull
     ifne                L28

     getlex              QName(PackageNamespace("flash.system"), "ApplicationDomain")
     getproperty         QName(PackageNamespace(""), "currentDomain")
     coerce              QName(PackageNamespace("flash.system"), "ApplicationDomain")
     dup
     setlocal            4

     pushstring          "mx.core::FlexVersion"
     callproperty        QName(PackageNamespace(""), "hasDefinition"), 1
     iffalse             L28

     findproperty        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "FlexVersionClass")
     findpropstrict      QName(PackageNamespace(""), "Class")
     getlocal            4
     pushstring          "mx.core::FlexVersion"
     callproperty        QName(PackageNamespace(""), "getDefinition"), 1
     callproperty        QName(PackageNamespace(""), "Class"), 1
     setproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "FlexVersionClass")

L28:
     getlex              QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "FlexVersionClass")
     convert_b
     dup
     iffalse             L40

     pop
     getlex              QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "FlexVersionClass")
     pushstring          "compatibilityVersion"
     getproperty         MultinameL([PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), PackageNamespace(""), PrivateNamespace("*", "mx.core:BitmapAsset/instance#1"), PackageNamespace("mx.core"), PackageInternalNs("mx.core"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("mx.core:BitmapAsset"), StaticProtectedNs("mx.core:BitmapAsset"), StaticProtectedNs("mx.core:FlexBitmap"), StaticProtectedNs("flash.display:Bitmap"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher")])
     getlex              QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "FlexVersionClass")
     pushstring          "VERSION_4_0"
     getproperty         MultinameL([PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), PackageNamespace(""), PrivateNamespace("*", "mx.core:BitmapAsset/instance#1"), PackageNamespace("mx.core"), PackageInternalNs("mx.core"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("mx.core:BitmapAsset"), StaticProtectedNs("mx.core:BitmapAsset"), StaticProtectedNs("mx.core:FlexBitmap"), StaticProtectedNs("flash.display:Bitmap"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher")])
     greaterequals
L40:
     iffalse             L47

     getlocal0
     getlex              QName(PackageNamespace("flash.events"), "Event")
     getproperty         QName(PackageNamespace(""), "ADDED")
     getlocal0
     getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "addedHandler")
     callpropvoid        QName(PackageNamespace(""), "addEventListener"), 2

L47:
     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeaturesClass") type QName(PackageNamespace(""), "Class") end
  trait slot QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures") type QName(PackageNamespace("mx.core"), "IAssetLayoutFeatures") end
  trait getter QName(PackageNamespace(""), "x") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/x/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "x")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutX")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "x") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/x/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "x")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "x")

      jump                L21

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutX")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L21:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "y") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/y/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "y")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutY")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "y") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/y/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "y")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "y")

      jump                L21

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutY")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L21:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "z") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/z/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "z")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutZ")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "z") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/z/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "z")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "z")

      jump                L21

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutZ")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L21:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "width") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/width/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 5
     localcount 3
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      pushnull
      coerce              QName(PackageNamespace("flash.geom"), "Point")
      setlocal1

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L12

      getlocal0
      getsuper            QName(PackageNamespace(""), "width")
      returnvalue

L12:
      getlex              QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "MatrixUtilClass")
      pushnull
      ifeq                L32

      getlex              QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "MatrixUtilClass")
      dup
      setlocal2

      pushstring          "transformSize"
      getproperty         MultinameL([PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), PackageNamespace(""), PrivateNamespace("*", "mx.core:BitmapAsset/instance#1"), PackageNamespace("mx.core"), PackageInternalNs("mx.core"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("mx.core:BitmapAsset"), StaticProtectedNs("mx.core:BitmapAsset"), StaticProtectedNs("mx.core:FlexBitmap"), StaticProtectedNs("flash.display:Bitmap"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher")])
      getlocal2
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutWidth")
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_height")
      getlex              QName(PackageNamespace(""), "transform")
      getproperty         QName(PackageNamespace(""), "matrix")
      call                3
      kill                2
      coerce              QName(PackageNamespace("flash.geom"), "Point")
      setlocal1

L32:
      getlocal1
      iffalse             L38

      getlocal1
      getproperty         QName(PackageNamespace(""), "x")
      convert_d
      jump                L41

L38:
      getlocal0
      getsuper            QName(PackageNamespace(""), "width")
      convert_d
L41:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "width") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/width/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "width")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "width")

      jump                L36

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutWidth")

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal0
      getproperty         QName(PackageNamespace(""), "measuredWidth")
      pushbyte            0
      ifeq                L31

      getlocal1
      getlocal0
      getproperty         QName(PackageNamespace(""), "measuredWidth")
      divide
      convert_d
      jump                L33

L31:
      pushbyte            0
      convert_d
L33:
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleX")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L36:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait slot QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_height") type QName(PackageNamespace(""), "Number") end
  trait getter QName(PackageNamespace(""), "height") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/height/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 5
     localcount 3
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      pushnull
      coerce              QName(PackageNamespace("flash.geom"), "Point")
      setlocal1

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L12

      getlocal0
      getsuper            QName(PackageNamespace(""), "height")
      returnvalue

L12:
      getlex              QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "MatrixUtilClass")
      pushnull
      ifeq                L32

      getlex              QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "MatrixUtilClass")
      dup
      setlocal2

      pushstring          "transformSize"
      getproperty         MultinameL([PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), PackageNamespace(""), PrivateNamespace("*", "mx.core:BitmapAsset/instance#1"), PackageNamespace("mx.core"), PackageInternalNs("mx.core"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("mx.core:BitmapAsset"), StaticProtectedNs("mx.core:BitmapAsset"), StaticProtectedNs("mx.core:FlexBitmap"), StaticProtectedNs("flash.display:Bitmap"), StaticProtectedNs("flash.display:DisplayObject"), StaticProtectedNs("flash.events:EventDispatcher")])
      getlocal2
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutWidth")
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_height")
      getlex              QName(PackageNamespace(""), "transform")
      getproperty         QName(PackageNamespace(""), "matrix")
      call                3
      kill                2
      coerce              QName(PackageNamespace("flash.geom"), "Point")
      setlocal1

L32:
      getlocal1
      iffalse             L38

      getlocal1
      getproperty         QName(PackageNamespace(""), "y")
      convert_d
      jump                L41

L38:
      getlocal0
      getsuper            QName(PackageNamespace(""), "height")
      convert_d
L41:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "height") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/height/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "height")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "height")

      jump                L35

L15:
      getlocal0
      getlocal1
      initproperty        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_height")

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal0
      getproperty         QName(PackageNamespace(""), "measuredHeight")
      pushbyte            0
      ifeq                L30

      getlocal1
      getlocal0
      getproperty         QName(PackageNamespace(""), "measuredHeight")
      divide
      convert_d
      jump                L32

L30:
      pushbyte            0
      convert_d
L32:
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleY")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L35:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "rotationX") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/rotationX/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "rotationX")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationX")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "rotationX") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/rotationX/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "rotationX")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "rotationX")

      jump                L21

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationX")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L21:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "rotationY") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/rotationY/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "rotationY")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationY")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "rotationY") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/rotationY/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "rotationY")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "rotationY")

      jump                L21

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationY")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L21:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "rotationZ") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/rotationZ/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "rotationZ")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationZ")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "rotationZ") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/rotationZ/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "rotationZ")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "rotationZ")

      jump                L21

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationZ")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L21:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "rotation") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/rotation/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "rotation")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationZ")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "rotation") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/rotation/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "rotation")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "rotation")

      jump                L21

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationZ")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L21:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "scaleX") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/scaleX/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "scaleX")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleX")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "scaleX") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/scaleX/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "scaleX")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "scaleX")

      jump                L30

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleX")

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlex              QName(PackageNamespace(""), "Math")
      getlocal1
      callproperty        QName(PackageNamespace(""), "abs"), 1
      getlocal0
      getproperty         QName(PackageNamespace(""), "measuredWidth")
      multiply
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutWidth")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L30:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "scaleY") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/scaleY/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "scaleY")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleY")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "scaleY") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/scaleY/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "scaleY")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "scaleY")

      jump                L29

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleY")

      getlocal0
      getlex              QName(PackageNamespace(""), "Math")
      getlocal1
      callproperty        QName(PackageNamespace(""), "abs"), 1
      getlocal0
      getproperty         QName(PackageNamespace(""), "measuredHeight")
      multiply
      initproperty        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_height")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L29:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "scaleZ") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/scaleZ/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L10

      getlocal0
      getsuper            QName(PackageNamespace(""), "scaleZ")
      convert_d
      jump                L14

L10:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleZ")
      convert_d
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "scaleZ") flag OVERRIDE
   method
    refid "mx.core:BitmapAsset/instance/scaleZ/setter"
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PackageNamespace(""), "scaleZ")
      getlocal1
      ifne                L7

      returnvoid

L7:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifne                L15

      getlocal0
      getlocal1
      setsuper            QName(PackageNamespace(""), "scaleZ")

      jump                L21

L15:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal1
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleZ")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L21:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait slot QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_layoutDirection") type QName(PackageNamespace(""), "String") value Utf8("ltr") end
  trait getter QName(PackageNamespace(""), "layoutDirection")
   method
    refid "mx.core:BitmapAsset/instance/layoutDirection/getter"
    returns QName(PackageNamespace(""), "String")
    body
     maxstack 1
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_layoutDirection")
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait setter QName(PackageNamespace(""), "layoutDirection")
   method
    refid "mx.core:BitmapAsset/instance/layoutDirection/setter"
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal1
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_layoutDirection")
      ifne                L7

      returnvoid

L7:
      getlocal0
      getlocal1
      initproperty        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_layoutDirection")

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "invalidateLayoutDirection"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "measuredHeight")
   method
    refid "mx.core:BitmapAsset/instance/measuredHeight/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 1
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlex              QName(PackageNamespace(""), "bitmapData")
      iffalse             L7

      getlex              QName(PackageNamespace(""), "bitmapData")
      getproperty         QName(PackageNamespace(""), "height")
      returnvalue

L7:
      pushbyte            0
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait getter QName(PackageNamespace(""), "measuredWidth")
   method
    refid "mx.core:BitmapAsset/instance/measuredWidth/getter"
    returns QName(PackageNamespace(""), "Number")
    body
     maxstack 1
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlex              QName(PackageNamespace(""), "bitmapData")
      iffalse             L7

      getlex              QName(PackageNamespace(""), "bitmapData")
      getproperty         QName(PackageNamespace(""), "width")
      returnvalue

L7:
      pushbyte            0
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "invalidateLayoutDirection")
   method
    refid "mx.core:BitmapAsset/instance/invalidateLayoutDirection"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 3
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      pushfalse
      setlocal2

      getlex              QName(PackageNamespace(""), "parent")
      coerce              QName(PackageNamespace("flash.display"), "DisplayObjectContainer")
      setlocal1

      jump                L87

L8:
      label
      getlocal1
      getlex              QName(PackageNamespace("mx.core"), "ILayoutDirectionElement")
      istypelate
      iffalse             L83

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_layoutDirection")
      pushnull
      equals
      not
      dup
      iffalse             L28

      pop
      findpropstrict      QName(PackageNamespace("mx.core"), "ILayoutDirectionElement")
      getlocal1
      callproperty        QName(PackageNamespace("mx.core"), "ILayoutDirectionElement"), 1
      getproperty         QName(Namespace("mx.core:ILayoutDirectionElement"), "layoutDirection")
      pushnull
      equals
      not
L28:
      dup
      iffalse             L39

      pop
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_layoutDirection")
      findpropstrict      QName(PackageNamespace("mx.core"), "ILayoutDirectionElement")
      getlocal1
      callproperty        QName(PackageNamespace("mx.core"), "ILayoutDirectionElement"), 1
      getproperty         QName(Namespace("mx.core:ILayoutDirectionElement"), "layoutDirection")
      equals
      not
L39:
      convert_b
      setlocal2

      getlocal2
      convert_b
      dup
      iffalse             L50

      pop
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      equals
L50:
      iffalse             L64

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "initAdvancedLayoutFeatures"), 0

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifeq                L63

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal2
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "mirror")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

L63:
      jump                L82

L64:
      getlocal2
      not
      dup
      iffalse             L72

      pop
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      convert_b
L72:
      iffalse             L82

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getlocal2
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "mirror")

      getlocal0
      callpropvoid        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix"), 0

      getlocal0
      pushnull
      initproperty        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")

L82:
      jump                L89

L83:
      getlocal1
      getproperty         QName(PackageNamespace(""), "parent")
      coerce              QName(PackageNamespace("flash.display"), "DisplayObjectContainer")
      setlocal1

L87:
      getlocal1
      iftrue              L8

L89:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "move")
   method
    refid "mx.core:BitmapAsset/instance/move"
    param QName(PackageNamespace(""), "Number")
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 3
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      setproperty         QName(PackageNamespace(""), "x")

      getlocal0
      getlocal2
      setproperty         QName(PackageNamespace(""), "y")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "setActualSize")
   method
    refid "mx.core:BitmapAsset/instance/setActualSize"
    param QName(PackageNamespace(""), "Number")
    param QName(PackageNamespace(""), "Number")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 3
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      initproperty        QName(PackageNamespace(""), "width")

      getlocal0
      getlocal2
      initproperty        QName(PackageNamespace(""), "height")

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "addedHandler")
   method
    refid "mx.core:BitmapAsset/instance/mx.core:BitmapAsset/instance/addedHandler"
    param QName(PackageNamespace("flash.events"), "Event")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 1
     localcount 2
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      callpropvoid        QName(PackageNamespace(""), "invalidateLayoutDirection"), 0

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "initAdvancedLayoutFeatures")
   method
    refid "mx.core:BitmapAsset/instance/mx.core:BitmapAsset/instance/initAdvancedLayoutFeatures"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 4
     localcount 3
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      pushnull
      coerce              QName(PackageNamespace("flash.system"), "ApplicationDomain")
      setlocal1

      pushnull
      coerce              QName(PackageNamespace("mx.core"), "IAssetLayoutFeatures")
      setlocal2

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeaturesClass")
      pushnull
      ifne                L41

      getlex              QName(PackageNamespace("flash.system"), "ApplicationDomain")
      getproperty         QName(PackageNamespace(""), "currentDomain")
      coerce              QName(PackageNamespace("flash.system"), "ApplicationDomain")
      setlocal1

      getlocal1
      pushstring          "mx.core::AdvancedLayoutFeatures"
      callproperty        QName(PackageNamespace(""), "hasDefinition"), 1
      iffalse             L27

      getlocal0
      findpropstrict      QName(PackageNamespace(""), "Class")
      getlocal1
      pushstring          "mx.core::AdvancedLayoutFeatures"
      callproperty        QName(PackageNamespace(""), "getDefinition"), 1
      callproperty        QName(PackageNamespace(""), "Class"), 1
      initproperty        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeaturesClass")

L27:
      getlex              QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "MatrixUtilClass")
      pushnull
      ifne                L41

      getlocal1
      pushstring          "mx.utils::MatrixUtil"
      callproperty        QName(PackageNamespace(""), "hasDefinition"), 1
      iffalse             L41

      findproperty        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "MatrixUtilClass")
      findpropstrict      QName(PackageNamespace(""), "Class")
      getlocal1
      pushstring          "mx.utils::MatrixUtil"
      callproperty        QName(PackageNamespace(""), "getDefinition"), 1
      callproperty        QName(PackageNamespace(""), "Class"), 1
      setproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "MatrixUtilClass")

L41:
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeaturesClass")
      pushnull
      ifeq                L96

      getlocal0
      constructprop       QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeaturesClass"), 0
      coerce              QName(PackageNamespace("mx.core"), "IAssetLayoutFeatures")
      setlocal2

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "scaleX")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleX")

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "scaleY")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleY")

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "scaleZ")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutScaleZ")

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "rotationX")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationX")

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "rotationY")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationY")

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "rotation")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutRotationZ")

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "x")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutX")

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "y")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutY")

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "z")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutZ")

      getlocal2
      getlocal0
      getproperty         QName(PackageNamespace(""), "width")
      setproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "layoutWidth")

      getlocal0
      getlocal0
      getproperty         QName(PackageNamespace(""), "height")
      initproperty        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "_height")

      getlocal0
      getlocal2
      initproperty        QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")

L96:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "validateTransformMatrix")
   method
    refid "mx.core:BitmapAsset/instance/mx.core:BitmapAsset/instance/validateTransformMatrix"
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 1
     initscopedepth 8
     maxscopedepth 9
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      pushnull
      ifeq                L23

      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "is3D")
      iffalse             L17

      getlocal0
      getsuper            QName(PackageNamespace(""), "transform")
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "computedMatrix3D")
      setproperty         QName(PackageNamespace(""), "matrix3D")

      jump                L23

L17:
      getlocal0
      getsuper            QName(PackageNamespace(""), "transform")
      getlocal0
      getproperty         QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "layoutFeatures")
      getproperty         QName(Namespace("mx.core:IAssetLayoutFeatures"), "computedMatrix")
      setproperty         QName(PackageNamespace(""), "matrix")

L23:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "mx.core:BitmapAsset/class/init"
  body
   maxstack 2
   localcount 1
   initscopedepth 7
   maxscopedepth 8
   code
    getlocal0
    pushscope

    findproperty        QName(Namespace("http://www.adobe.com/2006/flex/mx/_internal"), "VERSION")
    pushstring          "4.6.0.23201"
    initproperty        QName(Namespace("http://www.adobe.com/2006/flex/mx/_internal"), "VERSION")

    returnvoid
   end ; code
  end ; body
 end ; method
 trait const QName(Namespace("http://www.adobe.com/2006/flex/mx/_internal"), "VERSION") slotid 1 type QName(PackageNamespace(""), "String") value Utf8("4.6.0.23201") end
 trait slot QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "FlexVersionClass") slotid 2 type QName(PackageNamespace(""), "Class") end
 trait slot QName(PrivateNamespace("*", "mx.core:BitmapAsset/instance#0"), "MatrixUtilClass") slotid 3 type QName(PackageNamespace(""), "Class") end
end ; class
